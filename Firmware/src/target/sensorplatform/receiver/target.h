#pragma once

// SensorPlatform Base Station
// Copyright (C) 2016-2017 Michael Sparmann
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.


#define STM32_GPIO_CONFIG \
{ \
    GPIO_CONFIG_PORT( /* PORTA */ \
        /* PA 0 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_UART4, /* UART4_TX (EXT) */ \
        /* PA 1 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_UART4, /* UART4_RX (EXT) */ \
        /* PA 2 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_USART2, /* USART2_TX (EXT) */ \
        /* PA 3 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_USART2, /* USART2_RX (EXT) */ \
        /* PA 4 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI1, /* SPI1_NSS (EXT) */ \
        /* PA 5 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI1, /* SPI1_SCK (EXT) */ \
        /* PA 6 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI1, /* SPI1_MISO (EXT) */ \
        /* PA 7 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI1, /* SPI1_MOSI (EXT) */ \
        /* PA 8 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_TIM1, /* LED 1 */ \
        /* PA 9 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_TIM1, /* LED 2 */ \
        /* PA10 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_2MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_USART1, /* OTG_FS_ID */ \
        /* PA11 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_OTG_FS, /* OTG_FS_DM */ \
        /* PA12 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_OTG_FS, /* OTG_FS_DP */ \
        /* PA13 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_50MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* SWDIO */ \
        /* PA14 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_50MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* SWCLK */ \
        /* PA15 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_TIM2, /* LED 3 */ \
    ), \
    GPIO_CONFIG_PORT( /* PORTB */ \
        /* PB 0 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* ADC12_IN8 (EXT) */ \
        /* PB 1 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* ADC12_IN9 (EXT) */ \
        /* PB 2 */ MODE_INPUT, TYPE_OPENDRAIN, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* BOOT1 (GND) */ \
        /* PB 3 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI3, /* SPI3_SCK (SD) */ \
        /* PB 4 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI3, /* SPI3_MISO (SD) */ \
        /* PB 5 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI3, /* SPI3_MOSI (SD) */ \
        /* PB 6 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_HIGH, SPECIAL_TIM4, /* nEXT_ON */ \
        /* PB 7 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* USERBTN */ \
        /* PB 8 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D4 */ \
        /* PB 9 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D5 */ \
        /* PB10 */ MODE_SPECIAL, TYPE_OPENDRAIN, SPEED_2MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_I2C2, /* I2C2_SCL (EXT) */ \
        /* PB11 */ MODE_SPECIAL, TYPE_OPENDRAIN, SPEED_2MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_I2C2, /* I2C2_SDA (EXT) */ \
        /* PB12 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_2MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_OTG_HS, /* OTG_HS_ID */ \
        /* PB13 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI2, /* SPI2_SCK (NRF) */ \
        /* PB14 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_OTG_HS, /* OTG_HS_DM */ \
        /* PB15 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_OTG_HS, /* OTG_HS_DP */ \
    ), \
    GPIO_CONFIG_PORT( /* PORTC */ \
        /* PC 0 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* NRF_CE */ \
        /* PC 1 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_HIGH, SPECIAL_SYS, /* NRF_nCS */ \
        /* PC 2 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI2, /* SPI2_MISO (NRF) */ \
        /* PC 3 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SPI2, /* SPI2_MOSI (NRF) */ \
        /* PC 4 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SYS, /* NRF_nIRQ */ \
        /* PC 5 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* LED 4 */ \
        /* PC 6 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D6 */ \
        /* PC 7 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D7 */ \
        /* PC 8 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D0 */ \
        /* PC 9 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D1 */ \
        /* PC10 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D2 */ \
        /* PC11 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_D3 */ \
        /* PC12 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_CK */ \
        /* PC13 */ MODE_OUTPUT, TYPE_PUSHPULL, SPEED_25MHZ, PULL_NONE, INITCTL_SET, INITVAL_HIGH, SPECIAL_SYS, /* SD_nCS */ \
        /* PC14 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* OSC32_IN */ \
        /* PC15 */ MODE_ANALOG, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* OSC32_OUT */ \
    ), \
    GPIO_CONFIG_PORT( /* PORTD */ \
        /* PD 0 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 1 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 2 */ MODE_SPECIAL, TYPE_PUSHPULL, SPEED_25MHZ, PULL_UP, INITCTL_SET, INITVAL_HIGH, SPECIAL_SDIO, /* SDIO_CMD */ \
        /* PD 3 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 4 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 5 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 6 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 7 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 8 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD 9 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD10 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD11 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD12 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD13 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD14 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
        /* PD15 */ MODE_INPUT, TYPE_PUSHPULL, SPEED_2MHZ, PULL_NONE, INITCTL_SET, INITVAL_LOW, SPECIAL_SYS, /* nonpresent */ \
    ), \
}

#define RADIO_SPI_PRESCALER 1
#define RADIO_SPI_BUS STM32_SPI2_REGS
#define RADIO_SPI_CLK STM32_SPI2_CLOCKGATE
#define RADIO_TIMER STM32_TIM7_REGS
#define RADIO_TIMER_CLK STM32_TIM7_CLOCKGATE
#define RADIO_DMA_RX_CONTROLLER 0
#define RADIO_DMA_RX_STREAM 3
#define RADIO_DMA_RX_CHANNEL 0
#define RADIO_DMA_RX_PRIORITY 3
#define RADIO_DMA_TX_CONTROLLER 0
#define RADIO_DMA_TX_STREAM 4
#define RADIO_DMA_TX_CHANNEL 0
#define RADIO_DMA_TX_PRIORITY 3
#define PIN_RADIO_NCS PIN_C1
#define PIN_RADIO_CE PIN_C0
#define PIN_RADIO_NIRQ PIN_C4

#define PIN_LED1 PIN_A8
#define PIN_LED2 PIN_A9
#define PIN_LED3 PIN_A15
#define PIN_LED4 PIN_C5

// Use STM32 TIM2 as system tick timer (instead of the ARM core's SysTick)
#define TICK_TIMER STM32_TIM2_REGS
#define TICK_TIMER_CLK STM32_TIM2_CLOCKGATE
#define TICK_TIMER_FREQ (STM32_APB1_CLOCK * 2)

// Tunables:
// Maximum number of USB packets per transmission (double buffered, thus 128 * N bytes of RAM)
#define USB_TX_BUFFERS 64
// Number of radio packet reception buffers (N * 32 bytes of RAM)
#define RADIO_RX_BUFFERS 1024
// Number of radio packet transmission buffers (N * 32 bytes of RAM)
#define RADIO_CMD_BUFFERS 16
// Maximum number of consecutive frames that don't contain a beacon packet
#define MAX_CONSECUTIVE_CMD_FRAMES 3
// Maximum number of time slots to assign to a single urgency level (for dynamic slot assignment)
#define MAX_SLOTS_PER_PRIORITY 24
// Maximum number of time slots to assign to a single NodeId (for dynamic slot assignment)
#define MAX_SLOTS_PER_NODE 24
// Only offer one slot to a node if it has missed at least N frames
#define NODE_FRAME_LOSS_SINGLESLOT 3
// Kick a node from the channel if it has missed at least N frames
#define NODE_FRAME_LOSS_DISCONNECT 50
// Stack size in bytes
//#define STACK_SIZE 1024

#define RUNNING_FROM_FLASH
#define GPIO_SUPPORT_FAST_MODE
#define CORTEXM_DISABLE_SYSTICK
//#define STM32_USE_INOFFICIAL
#define STM32_ENABLE_EXTI
#define STM32_ENABLE_USB
#include "board/sensorplatform/receiver/target.h"
